// Программный модуль коррекции частоты
// вычисление корректирующего значения проводить после прогрева устройства
// через 5 минут после включения режима КВ или GPS

#ifndef FILTER_H_
#define FILTER_H_

#ifdef __cplusplus
extern "C" {
#endif

// структура состояния корректора для сохранения в энергонезависимой памяти
typedef struct {
	float k;
	float delay1;
	float delay2;
} corr_STATE;

// функция инициализации корректора
// вызывать в начале работы передавать в качестве параметра сохраненное состояние
// вызов других функций до вызова этой не допустим
void init_corrector(corr_STATE *st);

// Функция запроса состояния (для сохранения в энергонезависимой памяти);
void get_corrector_state(corr_STATE *sr); // указатель на структуру с параметрами

// Функция вычисления корректирующего коеффициента
// Вызывается после получения импульса от GPS приемника по приходу информации о его достоверности
// diff - считанное значение регистра разности
// last_gps -  достоверность текущей секундной метки 1PPS от GPS-приемника
// возвращаемое значение - корректирующее значение относительно серидины диапазона цифрового потенциометра
float calculate_coeff(int diff, bool last_gps);

// Функция вычисления корректирующего коеффициента
// Вызывается после получения погрешности частоты от приемника КВ радиолинии
// diff - считанное значение регистра разности
// frеc_hz частота приема КВ радиолинии на которой рассчитана погрешность
// возвращаемое значение - корректирующее значение относительно серидины диапазона цифрового потенциометра
float calculate_coeff_sw(int diff, int frec_hz);

// запрос текущего коэффициента коррекции
float get_corrector_coeff(void);

#ifdef __cplusplus
}
#endif

#endif
